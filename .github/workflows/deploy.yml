name: Deploy Marp Slides to GitHub Pages

on:
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Install Dependencies
        run: npm install

      - name: Build Slides
        run: npm run build
      
      - name: Build PDF Slides
        run: npm run pdf

      - name: Generate index.html
        run: |
          echo "<!DOCTYPE html><html><head><meta charset='UTF-8'><title>Slides Index</title></head><body><h1>📚 Slide List</h1><ul>" > dist/index.html
          for file in dist/*.html; do
            name=$(basename "$file")
            base="${name%.html}"
            [[ "$name" == "index.html" ]] && continue
            # PDF 파일이 있으면 PDF 다운로드 링크도 추가
            if [ -f "dist/$base.pdf" ]; then
              echo "<li><a href='$name'>$name</a> - <a href='$base.pdf' download>PDF 다운로드</a></li>" >> dist/index.html
            else
              echo "<li><a href='$name'>$name</a></li>" >> dist/index.html
            fi
          done
          echo "</ul></body></html>" >> dist/index.html


      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'  # 또는 마크다운 슬라이드가 HTML로 변환된 경로

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4